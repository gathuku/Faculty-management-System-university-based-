/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package classes;

import java.io.FileOutputStream;

import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Document;
import com.itextpdf.text.Element;
import com.itextpdf.text.Font;
import com.itextpdf.text.FontFactory;
import com.itextpdf.text.Image;

import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.pdf.ColumnText;
import com.itextpdf.text.pdf.PdfContentByte;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfPageEventHelper;
import com.itextpdf.text.pdf.PdfWriter;
import com.sun.scenario.effect.ImageData;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.Calendar;
import java.util.GregorianCalendar;
import javax.swing.JOptionPane;

import com.itextpdf.kernel.pdf.canvas.PdfCanvas;

/**
 *
 * @author Anadah Musah
 */
public class report_generate {

    private Object ImageDataFactory;
    ImageData data;
    private Object pdfWriter;

    String regno;
    String year;
    String name;
    String programe;
    int retake = 0;
    //connection variables
    Connection conn;
    PreparedStatement pst;
    Statement st;
    ResultSet rs;

    public void generate() {

        //connnect to database
        String dbname = "faculty_system";
        String username = "root";
        String password = "";
        String Driver = "com.mysql.jdbc.Driver";
        String url = "jdbc:mysql://localhost:3306/";

        try {
            Class.forName(Driver);
            conn = DriverManager.getConnection(url + dbname, username, password);

            // JOptionPane.showMessageDialog(null,"Connection Successfull");
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());

        }

        //report name
        String reportname = regno.replace('/', '_');

        PdfPCell table_cell;
        try {
            PdfWriter writer;
            /* Step-2: Initialize PDF documents - logical objects */
            Document my_pdf_report = new Document();
            PdfWriter pdf=PdfWriter.getInstance(my_pdf_report, new FileOutputStream("Reports//" + reportname + ".pdf"));
            
            // Writer.setPageEvent(new PDFEventListener());
            my_pdf_report.open();

            //we have four columns in our table
            PdfPTable my_report_table = new PdfPTable(4);
            PdfPTable my_header_table = new PdfPTable(3);
            PdfPTable legendtable = new PdfPTable(2);
            //create a cell object
            class MyFooter extends PdfPageEventHelper {

                Font ffont = new Font(Font.FontFamily.HELVETICA, 12, Font.ITALIC);

                @Override
                public void onEndPage(PdfWriter writer, Document document) {
                    PdfContentByte cb = writer.getDirectContent();
                    Phrase footer = new Phrase("Report card designed and generated by Motech Systems.", ffont);

                    ColumnText.showTextAligned(cb, Element.ALIGN_CENTER,
                            footer,
                            (document.right() - document.left()) / 2 + document.leftMargin(),
                            document.bottom() - 10, 0);
                }
            }
            //header table

            //footer
            
            new MyFooter().onEndPage(pdf, my_pdf_report);
            
            new PDFEventListener().onEndPage(pdf, my_pdf_report);
            //adding an image
            
            Image image = Image.getInstance("images/logo.png");
            image.setAlignment(Element.ALIGN_CENTER);
            image.setBorderColor(BaseColor.BLUE);
            image.scaleAbsolute(100, 100);
            image.setBorder(3);
            image.setWidthPercentage(56);

            //header information
            Paragraph titl = new Paragraph("KISII UNIVERSITY", FontFactory.getFont(FontFactory.HELVETICA_BOLD, 22, Font.BOLD, BaseColor.BLUE));
            titl.setAlignment(Element.ALIGN_CENTER);
            my_pdf_report.add(image);
            my_pdf_report.add(titl);

            Paragraph titl1 = new Paragraph("TRANSCRIPT", FontFactory.getFont(FontFactory.HELVETICA_BOLD, 16, Font.BOLD, BaseColor.BLUE));
            titl1.setAlignment(Element.ALIGN_CENTER);
            my_pdf_report.add(titl1);

            Paragraph faculty = new Paragraph("FACULTY INFORMATION SCIENCE AND TECHNOLOGY", FontFactory.getFont(FontFactory.HELVETICA, 14, Font.BOLD, BaseColor.BLUE));
            faculty.setAlignment(Element.ALIGN_CENTER);
            my_pdf_report.add(faculty);
            //add registration number
            Paragraph titl2 = new Paragraph("Admission Number: " + regno, FontFactory.getFont(FontFactory.HELVETICA, 14, Font.NORMAL, BaseColor.BLACK));
            titl2.setAlignment(Element.ALIGN_LEFT);
            my_pdf_report.add(titl2);

//            PdfCanvas canvas;
//            canvas = new PdfCanvas(my_pdf_report);
//
//            canvas.moveTo(100, 300);
//
//            // Drawing the line       
//            canvas.lineTo(500, 300);
//
//            // Closing the path stroke       
//            canvas.closePathStroke();
            //adding name
            String sql3 = "SELECT firstName,otherNames FROM students WHERE regNo='" + regno + "'";

            st = conn.createStatement();
            rs = st.executeQuery(sql3);
            while (rs.next()) {
                String fname = rs.getString("firstName");
                String othername = rs.getString("otherNames");
                name = fname + " " + othername;
            }
            Paragraph name1 = new Paragraph("Name: " + name, FontFactory.getFont(FontFactory.HELVETICA, 14, Font.NORMAL, BaseColor.BLACK));
            name1.setAlignment(Element.ALIGN_LEFT);
            my_pdf_report.add(name1);

            //adding level of study
            Paragraph level = new Paragraph("Level " + year, FontFactory.getFont(FontFactory.HELVETICA, 14, Font.NORMAL, BaseColor.BLACK));
            level.setAlignment(Element.ALIGN_LEFT);
            my_pdf_report.add(level);

            //date of admission
            String group = "";

            if (regno.endsWith("1")) {
                group = "2011";
            } else if (regno.endsWith("2")) {
                group = "2012";
            } else if (regno.endsWith("3")) {
                group = "2013";
            } else if (regno.endsWith("4")) {
                group = "2014";
            } else if (regno.endsWith("5")) {
                group = "2015";
            } else if (regno.endsWith("6")) {
                group = "2016";
            } else if (regno.endsWith("7")) {
                group = "2017";
            } else if (regno.endsWith("8")) {
                group = "2018";
            }
            Paragraph date = new Paragraph("Date of Admission: 08/09/" + group, FontFactory.getFont(FontFactory.HELVETICA, 14, Font.NORMAL, BaseColor.BLACK));
            date.setAlignment(Element.ALIGN_LEFT);
            my_pdf_report.add(date);

            Paragraph line = new Paragraph(" ", FontFactory.getFont(FontFactory.HELVETICA, 14, Font.BOLD, BaseColor.BLACK));
            line.setAlignment(Element.ALIGN_CENTER);
            my_pdf_report.add(line);

            //results table
            String t1 = "Course Code";
            table_cell = new PdfPCell(new Phrase(t1, FontFactory.getFont(FontFactory.HELVETICA, 9, Font.BOLD)));
            //table_cell.setColspan(6);
            table_cell.setBackgroundColor(BaseColor.PINK);
            table_cell.setHorizontalAlignment(Element.ALIGN_CENTER);
            my_report_table.addCell(table_cell);

            String t2 = "Course Description";
            table_cell = new PdfPCell(new Phrase(t2, FontFactory.getFont(FontFactory.HELVETICA, 9, Font.BOLD)));
            table_cell.setBackgroundColor(BaseColor.PINK);
            table_cell.setHorizontalAlignment(Element.ALIGN_CENTER);
            my_report_table.addCell(table_cell);

            String t3 = "Academic Hours";
            table_cell = new PdfPCell(new Phrase(t3, FontFactory.getFont(FontFactory.HELVETICA, 9, Font.BOLD)));
            table_cell.setBackgroundColor(BaseColor.PINK);
            table_cell.setHorizontalAlignment(Element.ALIGN_CENTER);
            my_report_table.addCell(table_cell);

            String t4 = "Grade";
            table_cell = new PdfPCell(new Phrase(t4, FontFactory.getFont(FontFactory.HELVETICA, 9, Font.BOLD)));
            table_cell.setBackgroundColor(BaseColor.PINK);
            table_cell.setHorizontalAlignment(Element.ALIGN_CENTER);
            my_report_table.addCell(table_cell);

            //fetch data from the database
            String sql = "SELECT unit,grade FROM exams WHERE regNo='" + regno + "' ";//and _year='" + year + "'";
            st = conn.createStatement();
            rs = st.executeQuery(sql);
            int i = 0;

            while (rs.next()) {
                i++;

                String unitcode = rs.getString("unit");
                String grade = rs.getString("grade");

                if (grade.equalsIgnoreCase("F")) {
                    retake += 1;
                }

                //getting unit Name
                String sql4 = "SELECT unitName,hours FROM units WHERE unitcode='" + unitcode + "'";
                st = conn.createStatement();
               ResultSet r = st.executeQuery(sql4);
                String unitname = "";
                String hours = "";

                while (r.next()) {

                    unitname = r.getString("unitName");
                    hours = r.getString("hours");

                }

                table_cell = new PdfPCell(new Phrase(unitcode));
                table_cell.setBackgroundColor(BaseColor.GRAY);
                table_cell.setHorizontalAlignment(Element.ALIGN_CENTER);
                my_report_table.addCell(table_cell);

                table_cell = new PdfPCell(new Phrase(unitname));
                table_cell.setBackgroundColor(BaseColor.GRAY);
                table_cell.setHorizontalAlignment(Element.ALIGN_CENTER);
                my_report_table.addCell(table_cell);

                //getting hours
                table_cell = new PdfPCell(new Phrase(hours));
                table_cell.setBackgroundColor(BaseColor.GRAY);
                table_cell.setHorizontalAlignment(Element.ALIGN_CENTER);
                my_report_table.addCell(table_cell);

                table_cell = new PdfPCell(new Phrase(grade));
                table_cell.setBackgroundColor(BaseColor.GRAY);
                table_cell.setHorizontalAlignment(Element.ALIGN_CENTER);
                my_report_table.addCell(table_cell);

            }

            my_pdf_report.add(my_report_table);

            //recomendation
            Paragraph recome = new Paragraph("RETAKE(FAILED COURSE)=  " + retake, FontFactory.getFont(FontFactory.HELVETICA, 12, Font.NORMAL, BaseColor.BLACK));
            recome.setAlignment(Element.ALIGN_LEFT);
            my_pdf_report.add(recome);

            Paragraph space = new Paragraph(" ", FontFactory.getFont(FontFactory.HELVETICA, 12, Font.NORMAL, BaseColor.BLACK));
            recome.setAlignment(Element.ALIGN_LEFT);
            my_pdf_report.add(space);

            String A = "(70%-100%) - Excellent";
            table_cell = new PdfPCell(new Phrase(A, FontFactory.getFont(FontFactory.HELVETICA, 12, Font.NORMAL)));
            table_cell.setBorderColor(BaseColor.WHITE);
            legendtable.addCell(table_cell);

            String B = "(60%-69%) - Very Good";
            table_cell = new PdfPCell(new Phrase(B, FontFactory.getFont(FontFactory.HELVETICA, 12, Font.NORMAL)));
            table_cell.setBorderColor(BaseColor.WHITE);
            legendtable.addCell(table_cell);

            String C = "(50%-59%) -  Good";
            table_cell = new PdfPCell(new Phrase(C, FontFactory.getFont(FontFactory.HELVETICA, 12, Font.NORMAL)));
            table_cell.setBorderColor(BaseColor.WHITE);
            legendtable.addCell(table_cell);

            String D = "(40%-49%) - Fair";
            table_cell = new PdfPCell(new Phrase(D, FontFactory.getFont(FontFactory.HELVETICA, 12, Font.NORMAL)));
            table_cell.setBorderColor(BaseColor.WHITE);
            legendtable.addCell(table_cell);

            String F = "(Below 40) - Fail";
            table_cell = new PdfPCell(new Phrase(F, FontFactory.getFont(FontFactory.HELVETICA, 12, Font.NORMAL)));
            table_cell.setBorderColor(BaseColor.WHITE);
            legendtable.addCell(table_cell);

            String G = "+ Retake";
            table_cell = new PdfPCell(new Phrase(G, FontFactory.getFont(FontFactory.HELVETICA, 12, Font.NORMAL)));
            table_cell.setBorderColor(BaseColor.WHITE);
            legendtable.addCell(table_cell);

            String H = "* Missing Marks";
            table_cell = new PdfPCell(new Phrase(H, FontFactory.getFont(FontFactory.HELVETICA, 12, Font.NORMAL)));
            table_cell.setBorderColor(BaseColor.WHITE);
            legendtable.addCell(table_cell);

            String j = "CT credit transfer";
            table_cell = new PdfPCell(new Phrase(j, FontFactory.getFont(FontFactory.HELVETICA, 12, Font.NORMAL)));
            table_cell.setBorderColor(BaseColor.WHITE);
            legendtable.addCell(table_cell);

            my_pdf_report.add(legendtable);

            //paragraph sign
            Paragraph sign = new Paragraph(" Signed ---------------", FontFactory.getFont(FontFactory.HELVETICA, 12, Font.NORMAL, BaseColor.BLACK));
            line.setAlignment(Element.ALIGN_LEFT);
            my_pdf_report.add(sign);
            Paragraph by = new Paragraph(" Prof Kibiwot Kurgat ( DEAN)", FontFactory.getFont(FontFactory.HELVETICA, 12, Font.BOLD, BaseColor.BLACK));
            line.setAlignment(Element.ALIGN_LEFT);
            my_pdf_report.add(by);

            Paragraph iso = new Paragraph(" Kisii University is an ISO 9001:2008 Certified", FontFactory.getFont(FontFactory.HELVETICA, 12, Font.NORMAL, BaseColor.BLACK));
            iso.setAlignment(Element.ALIGN_CENTER);
            my_pdf_report.add(iso);
            //getting the date
            Calendar mose = new GregorianCalendar();
            int day = mose.get(Calendar.DAY_OF_MONTH);
            int month = mose.get(Calendar.MONTH);
            int getyear = mose.get(Calendar.YEAR);
            Paragraph print = new Paragraph("Printed On: " + day + "/" + month + "/" + getyear, FontFactory.getFont(FontFactory.HELVETICA, 12, Font.NORMAL, BaseColor.BLACK));
            print.setAlignment(Element.ALIGN_CENTER);
            my_pdf_report.add(print);

            conn.close();
            my_pdf_report.close();
            //my_pdf_report.open();
            JOptionPane.showMessageDialog(null, "Report saved");

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }

    }

    public class PDFEventListener extends PdfPageEventHelper {

        @Override

        public void onEndPage(PdfWriter writer, Document document) {

            PdfContentByte canvas = writer.getDirectContentUnder();

            Phrase watermark = new Phrase("GATHUKU REPORTS", new Font(Font.FontFamily.TIMES_ROMAN, 19, Font.NORMAL, BaseColor.LIGHT_GRAY));

            ColumnText.showTextAligned(canvas, Element.ALIGN_CENTER, watermark, 337, 500, 45);

        }

    }
}
